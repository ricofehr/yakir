#!/bin/bash -e

PROVIDER="virtualbox"
ISDESTROY=0
SIZING=small
MIRROR_REGISTRY=""

# Help function
deployhelp() {
  cat <<EOF
Usage: $0 [options]
-h           this is some help text.
-d           destroy all previously provisioned vms
-p xxxx      vagrant provider, default is virtualbox
-r xxxx      docker private mirror registry
-s xxxx      sizing deployment, default is small
              - small : 1 master and 2 nodes, host with 16Go ram / 2 cores
              - medium : 1 master and 3 nodes host with 24Go ram / 4 cores
              - large : 1 master and 5 nodes, host with 32Go ram / 6 cores
EOF

exit 1
}

# Parse cmd options
while (($# > 0)); do
  case "$1" in
    -d)
      shift
      ISDESTROY=1
      ;;
    -r)
      shift
      MIRROR_REGISTRY=$1
      shift
      ;;
    -s)
      shift
      SIZING=$1
      shift
      ;;
    -p)
      shift
      PROVIDER=$1
      shift
      ;;
    -h)
      shift
      deployhelp
      ;;
    *)
      shift
      deployhelp
      ;;
  esac
done

# Ensure valid sizing
[[ -f vagrantfiles/Vagrantfile_${SIZING} ]] || SIZING=small

# Clean older bootstrap
if ((ISDESTROY == 1)); then
  vagrant destroy -f || echo "No vms previously installed"
fi


# Launch vagrant vms
ln -sf vagrantfiles/Vagrantfile_${SIZING} Vagrantfile
vagrant up --provider=$PROVIDER
sleep 30

# Disable cowsay ansible output
export ANSIBLE_NOCOWS=1

mkdir -p tmp

MIRROR_REGISTRY_PARAM=""
[[ -n "MIRROR_REGISTRY" ]] && MIRROR_REGISTRY_PARAM="-e crio_mirror=$MIRROR_REGISTRY"

# Deploy an openstack installation
pushd ansible >/dev/null
ln -sf inventories/inventory_${SIZING} inventory
ln -sf sizing_vars/sizing_vars_${SIZING}.yml sizing_vars.yml
ansible-playbook --ssh-extra-args="-C -o ControlMaster=auto -o ControlPersist=60s -o ConnectTimeout=30 -o ConnectionAttempts=5 -o StrictHostKeyChecking=no" $MIRROR_REGISTRY_PARAM -i inventory playbook.yml 2>&1 | tee ../tmp/k8s-deploy.log
popd >/dev/null

