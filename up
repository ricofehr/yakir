#!/bin/bash -e

PROVIDER="virtualbox"
ISDESTROY=0
SIZING=small
MIRROR_REGISTRY=""
K8S_DOMAIN="k8s.local"
CNI_PLUGIN="calico"
KEEPALIVED_PASSWORD="$(LC_ALL=C tr -dc A-Za-z0-9 </dev/urandom | head -c 8 ; echo '')"

# Help function
deployhelp() {
  cat <<EOF
Usage: $0 [options]
-h           this is some help text.
-d           destroy all previously provisioned vms
-c xxxx      CNI plugin, choices are weave, flannel, calico (default), cilium
-p xxxx      vagrant provider, default is virtualbox
-kp xxxx     keepalived password, default is randomly generated
-kd xxxx     global kubernetes domain, default is $K8S_DOMAIN
-m xxxx      container private mirror registry
-s xxxx      sizing deployment, default is small
              - small : 1 manager and 1 nodes, host with 8Go ram / 2 cores
              - medium : 3 managers and 2 nodes host with 16Go ram / 4 cores
              - large : 3 managers and 5 nodes, host with 24Go ram / 6 cores
EOF

exit 1
}

# Parse cmd options
while (($# > 0)); do
  case "$1" in
    -d)
      shift
      ISDESTROY=1
      ;;
    -c)
      shift
      CNI_PLUGIN=$1
      shift
      ;;
    -kp)
      shift
      KEEPALIVED_PASSWORD="$1"
      shift
      ;;
    -kd)
      shift
      k8S_DOMAIN="$1"
      shift
      ;;
    -m)
      shift
      MIRROR_REGISTRY=$1
      shift
      ;;
    -s)
      shift
      SIZING=$1
      shift
      ;;
    -p)
      shift
      PROVIDER=$1
      shift
      ;;
    -h)
      shift
      deployhelp
      ;;
    *)
      shift
      deployhelp
      ;;
  esac
done

# Ensure valid sizing
[[ -f vagrantfiles/Vagrantfile_${SIZING} ]] || SIZING=small

# Clean older bootstrap
if ((ISDESTROY == 1)); then
  vagrant destroy -f || echo "No vms previously installed"
fi


# Launch vagrant vms
ln -sf vagrantfiles/Vagrantfile_${SIZING} Vagrantfile
vagrant up --provider=$PROVIDER
sleep 15

# Disable cowsay ansible output
export ANSIBLE_NOCOWS=1

mkdir -p tmp

MIRROR_REGISTRY_PARAM=""
[[ -n "MIRROR_REGISTRY" ]] && MIRROR_REGISTRY_PARAM="-e crio_mirror=$MIRROR_REGISTRY"

# Deploy an openstack installation
pushd ansible >/dev/null
ln -sf inventories/inventory_${SIZING} inventory
ln -sf sizing_vars/sizing_vars_${SIZING}.yml sizing_vars.yml
mkdir -p collections/ansible_collections
ansible-galaxy collection install -r requirements.yml -p ./collections/
ansible-playbook --ssh-extra-args="-C -o ControlMaster=auto -o ControlPersist=60s -o ConnectTimeout=30 -o ConnectionAttempts=5 -o StrictHostKeyChecking=no" \
  $MIRROR_REGISTRY_PARAM -e "cni_plugin=$CNI_PLUGIN" -e "keepalived_pass=$KEEPALIVED_PASSWORD" -e "global_domain=$K8S_DOMAIN" -i inventory playbook.yml 2>&1
popd >/dev/null

