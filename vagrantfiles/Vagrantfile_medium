# k8s manager
managers = {
    "k8s-manager1" => "192.168.58.10",
    "k8s-manager2" => "192.168.58.11",
    "k8s-manager3" => "192.168.58.12"
}

# k8s nodes
nodes = {
    "k8s-node1" => "192.168.58.20",
    "k8s-node2" => "192.168.58.21",
    "k8s-node3" => "192.168.58.22"
}

def running_rosetta()
  !`sysctl -in sysctl.proc_translated`.strip().to_i.zero?
end

Vagrant.configure("2") do |config|
    config.ssh.insert_key = false
    config.ssh.forward_agent = true

    check_guest_additions = false
    functional_vboxsf = false

    arch = `arch`.strip()
    if arch == 'arm64' || (arch == 'i386' && running_rosetta())
      config.vm.box = "bento/ubuntu-24.04-arm64"
    else
      config.vm.box = "bento/ubuntu-24.04"
    end

    managers.each do |name, ip|
      config.vm.define name do |machine|
        machine.vm.hostname = name
        machine.vm.network :private_network, ip: ip
        machine.vm.provider :virtualbox do |v|
          v.name = name
          v.memory = 1792
          v.cpus = 2
        end

        machine.vm.provider :libvirt do |v|
          v.memory = 1792
          v.cpus = 2
          v.driver = 'kvm'
        end

        machine.vm.provider :parallels do |v|
          v.memory = 1792
          v.cpus = 2
        end
      end
    end

    nodes.each do |name, ip|
      config.vm.define name do |machine|
        machine.vm.hostname = name
        machine.vm.network :private_network, ip: ip
        machine.vm.disk :disk, size: "100GB", name: "disk_ceph"
        machine.vm.provider :virtualbox do |v|
          v.name = name
          v.memory = 4096
          v.cpus = 4
        end

        machine.vm.provider :libvirt do |v|
          v.memory = 4096
          v.cpus = 4
          v.driver = "kvm"
          v.disk_bus = "scsi"
          v.storage :file, size: "100G", type: "qcow2", path: "disk_ceph_#{name}.img", bus: "scsi", device: "sdb", cache: "writeback", io: "threads", discard: "unmap"
        end

        machine.vm.provider :parallels do |v|
          v.memory = 4096
          v.cpus = 4
          v.customize ["set", :id, "--device-add", "hdd", "--size", "100000", "--iface", "sata"]
        end
      end
    end
end
