image:
  repository: kubernetesui/dashboard
  tag: v2.1.0
  pullPolicy: IfNotPresent
  pullSecrets: []

replicaCount: 1

annotations: {}
labels: {}

protocolHttp: true
podAnnotations:
  seccomp.security.alpha.kubernetes.io/pod: 'runtime/default'
nodeSelector: {}
tolerations: []
affinity: {}

service:
  type: NodePort
  externalPort: 80

  annotations: {}

  labels: {}

resources:
  limits:
    cpu: 100m
    memory: 100Mi
  requests:
    cpu: 100m
    memory: 100Mi

ingress:
  enabled: true

  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: '{{ kubedashboard_ssl }}'

  paths:
    - /
    - /*

  hosts:
    - {{ kubedashboard_domain }}

  tls:
    - secretName: {{ ingress_cert_name }}
      hosts:
        - {{ kubedashboard_domain }}

rbac:
  # Specifies whether RBAC resources should be created
  create: true

  # Specifies whether cluster-admin ClusterRole will be used for dashboard
  # ServiceAccount (NOT RECOMMENDED).
  clusterAdminRole: true
  clusterRoleMetrics: true
  clusterReadOnlyRole: true

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: dashboard-kubernetes-dashboard

livenessProbe:
  # Number of seconds to wait before sending first probe
  initialDelaySeconds: 30
  # Number of seconds to wait for probe response
  timeoutSeconds: 30

containerSecurityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsUser: 1001
  runAsGroup: 2001
