---

- name: Generate kubeadm.conf for No Cloud provider
  become: true
  ansible.builtin.template:
    src: templates/{{ k8s_cloud }}-cloud-kubeadm.conf.j2
    dest: /etc/kubernetes/kubeadm.conf
    mode: '0644'

- name: Init manager node
  become: true
  when:
    - kubernetes_node_type == 'admin'
  run_once: true
  ansible.builtin.shell: |
    kubeadm reset -f
    kubeadm init --config /etc/kubernetes/kubeadm.conf
  args:
    creates: "{{ ansible_env.HOME }}/.kube/config"

- name: Get token from control-plane node
  become: true
  when: kubernetes_node_type == 'worker'
  ansible.builtin.shell: |
    set -e -o pipefail
    kubeadm token list | tail -n +2 | head -n 1 | sed "s/ .*//"
  args:
    executable: /bin/bash
  register: k8s_token
  delegate_to: "{{ k8s_manager_hostname }}"
  changed_when: false

- name: Add k8snode
  become: true
  when:
    - kubernetes_node_type == 'worker'
  ansible.builtin.shell: >
    kubeadm join --token {{ k8s_token.stdout }} --discovery-token-unsafe-skip-ca-verification
    --node-name {{ inventory_hostname }} --cri-socket=unix:///var/run/crio/crio.sock {{ k8s_manager_ip }}:443;
    touch {{ ansible_env.HOME }}/.k8sinstall
  args:
    creates: "{{ ansible_env.HOME }}/.k8sinstall"

- name: Wait for kubernetes API is reachable
  ansible.builtin.wait_for:
    host: "{{ k8s_manager_ip }}"
    port: 443
    delay: 5

- name: Ensure kubelet is in a running state
  become: true
  ansible.builtin.service:
    name: kubelet
    state: started
  register: k8s_kubelet_details
  until: k8s_kubelet_details.status.ActiveState == "active"
  retries: 25
  delay: 20

...
