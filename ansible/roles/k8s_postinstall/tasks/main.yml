---

- name: Ensure csr are generated
  pause:
    seconds: 30

- name: Sign pending certificates
  shell: kubectl get csr | sed "s/ .*$//" | while read CSR;do kubectl certificate approve $CSR;done

- name: Wait for control-plane pods become created
  shell: "kubectl get po --namespace=kube-system --selector tier=control-plane --output=jsonpath='{.items[*].metadata.name}'"
  register: control_plane_pods_created
  until: item in control_plane_pods_created.stdout
  retries: 10
  delay: 30
  with_items:
    - etcd
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler

- name: Wait for control-plane pods become ready
  shell: "kubectl wait --namespace=kube-system --for=condition=Ready pods --selector tier=control-plane --timeout=600s"

- name: Wait for kube-proxy become created
  shell: "kubectl get po --namespace=kube-system --selector k8s-app=kube-proxy --output=jsonpath='{.items[*].metadata.name}'"
  register: kube_proxy_pods_created
  until: item in kube_proxy_pods_created.stdout
  retries: 30
  delay: 10
  with_items:
    - kube-proxy

- name: Wait for kube-proxy pods become ready
  shell: "kubectl wait --namespace=kube-system --for=condition=Ready pods --selector k8s-app=kube-proxy --timeout=600s"

- name: Wait for CNI pods become created
  when:
    - k8s_cni == 'calico'
  shell: "kubectl get po --namespace=calico-system --selector k8s-app=calico-node --output=jsonpath='{.items[*].metadata.name}'"
  register: cni_pods_created
  until: item in cni_pods_created.stdout
  retries: 30
  delay: 10
  with_items:
    - calico-node

- name: Wait for cni pods become ready
  when:
    - k8s_cni == 'calico'
  shell: "kubectl wait --namespace=calico-system --for=condition=Ready pods --selector k8s-app=calico-node --timeout=600s"

- name: Wait for kube-cilium pods become ready
  when:
    - k8s_cni == 'cilium'
  shell: "kubectl wait pod --all --namespace=kube-cilium --for=condition=Ready --timeout=600s"

- name: Wait for kube-system pods become ready
  shell: "kubectl wait pod --all --namespace=kube-system --for=condition=Ready --timeout=600s"

